The ``text_indentation`` module
====================================

Using ``text_indentation``
-------------------------

This is a doctest file for testing the ``text_indentation`` function.

First import ``text_indentation`` from the ``5-text_indentation`` module:

    >>> text_indentation = __import__('5-text_indentation').text_indentation

Now use it:

Basic functionality tests:

    >>> text_indentation("Hello.")
    Hello.
    <BLANKLINE>

    >>> text_indentation("Hello?")
    Hello?
    <BLANKLINE>

    >>> text_indentation("Hello:")
    Hello:
    <BLANKLINE>

Multiple special characters:

    >>> text_indentation("Hello. How are you? I'm fine:")
    Hello.
    <BLANKLINE>
    How are you?
    <BLANKLINE>
    I'm fine:
    <BLANKLINE>

Text with spaces after special characters:

    >>> text_indentation("Hello.   How are you?    I'm fine:")
    Hello.
    <BLANKLINE>
    How are you?
    <BLANKLINE>
    I'm fine:
    <BLANKLINE>

Text with leading spaces:

    >>> text_indentation("   Hello. How are you?")
    Hello.
    <BLANKLINE>
    How are you?
    <BLANKLINE>

Text without special characters:

    >>> text_indentation("Hello world")
    Hello world

Empty string:

    >>> text_indentation("")

String with only spaces:

    >>> text_indentation("   ")

String with only special characters:

    >>> text_indentation(".:?")
    .
    <BLANKLINE>
    :
    <BLANKLINE>
    ?
    <BLANKLINE>

Special characters at the beginning:

    >>> text_indentation(".Hello?World:")
    .
    <BLANKLINE>
    Hello?
    <BLANKLINE>
    World:
    <BLANKLINE>

Multiple consecutive special characters:

    >>> text_indentation("Hello..??::")
    Hello.
    <BLANKLINE>
    .
    <BLANKLINE>
    ?
    <BLANKLINE>
    ?
    <BLANKLINE>
    :
    <BLANKLINE>
    :
    <BLANKLINE>

Text with newlines:

    >>> text_indentation("Hello.\nWorld?")
    Hello.
    <BLANKLINE>
    <BLANKLINE>
    World?
    <BLANKLINE>

Long text:

    >>> text_indentation("Lorem ipsum dolor sit amet. Consectetur adipiscing elit? Sed do eiusmod tempor incididunt:")
    Lorem ipsum dolor sit amet.
    <BLANKLINE>
    Consectetur adipiscing elit?
    <BLANKLINE>
    Sed do eiusmod tempor incididunt:
    <BLANKLINE>

Error cases:

Non-string argument (integer):

    >>> text_indentation(123)
    Traceback (most recent call last):
    TypeError: text must be a string

Non-string argument (float):

    >>> text_indentation(3.14)
    Traceback (most recent call last):
    TypeError: text must be a string

Non-string argument (list):

    >>> text_indentation([1, 2, 3])
    Traceback (most recent call last):
    TypeError: text must be a string

Non-string argument (None):

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string

Missing argument:

    >>> text_indentation()
    Traceback (most recent call last):
    TypeError: text_indentation() missing 1 required positional argument: 'text'

Too many arguments:

    >>> text_indentation("Hello", "World")
    Traceback (most recent call last):
    TypeError: text_indentation() takes 1 positional argument but 2 were given

Special cases with mixed characters:

    >>> text_indentation("Hello! How are you? Fine. Thanks:")
    Hello! How are you?
    <BLANKLINE>
    Fine.
    <BLANKLINE>
    Thanks:
    <BLANKLINE>
