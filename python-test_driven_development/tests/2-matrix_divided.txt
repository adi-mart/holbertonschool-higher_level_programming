======================================
2-matrix_divided.py - Matrix division
======================================

Doctest pour la fonction matrix_divided

Import:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

tests calculs:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [
    ...     [3, 6, 9],
    ...     [12, 15, 18]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

    >>> matrix = [[2, 4], [6, 8]]
    >>> matrix_divided(matrix, 2)
    [[1.0, 2.0], [3.0, 4.0]]

    >>> matrix_divided([[1]], 2)
    [[0.5]]

    >>> matrix_divided([[-1, -2], [-3, -4]], 2)
    [[-0.5, -1.0], [-1.5, -2.0]]

    >>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 2)
    [[0.75, 1.25], [1.75, 2.25]]

tests float:
    >>> matrix_divided([[1, 2], [3, 4]], 2.5)
    [[0.4, 0.8], [1.2, 1.6]]

    >>> matrix_divided([[1.1, 2.2], [3.3, 4.4]], 1.1)
    [[1.0, 2.0], [3.0, 4.0]]

tests erreurs matrix:
    >>> matrix_divided([[1, 2], [3, 'a']], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided("not a matrix", 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([1, 2, 3], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([["string"]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2], [3, None]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

tests taille des lignes:
    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2, 3], [4, 5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1], [2, 3]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

tests erreurs div:
    >>> matrix_divided([[1, 2], [3, 4]], "a")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided([[1, 2], [3, 4]], None)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided([[1, 2], [3, 4]], [1, 2])
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

tests division par zéro:
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 2], [3, 4]], 0.0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

tests infini et NaN:
    >>> matrix_divided([[1, 2], [3, 4]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix_divided([[1, 2], [3, 4]], float('-inf'))
    [[-0.0, -0.0], [-0.0, -0.0]]

tests nombres négatifs:
    >>> matrix_divided([[1, 2], [3, 4]], -2)
    [[-0.5, -1.0], [-1.5, -2.0]]

    >>> matrix_divided([[1, 2], [3, 4]], -1)
    [[-1.0, -2.0], [-3.0, -4.0]]

tests matrice vide:
    >>> matrix_divided([], 2)
    Traceback (most recent call last):
        ...
    IndexError: list index out of range

    >>> matrix_divided([[]], 2)
    [[]]

tests infini et NaN dans matrix:
    >>> matrix_divided([[float('inf'), 2], [3, 4]], 2)
    [[inf, 1.0], [1.5, 2.0]]

    >>> matrix_divided([[1, float('nan')], [3, 4]], 2)
    [[0.5, nan], [1.5, 2.0]]

tests très petits nombres:
    >>> matrix_divided([[0.0001, 0.0002]], 0.0001)
    [[1.0, 2.0]]

tests grandes matrices:
    >>> matrix = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5, 2.0], [2.5, 3.0, 3.5, 4.0], [4.5, 5.0, 5.5, 6.0]]

tests arguments manquants:
    >>> matrix_divided()
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
